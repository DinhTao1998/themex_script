---
#------------------------------
#     └── roles
#         ├── update-com-theme
#         │   └── tasks
#         │       └── main.yml
#
# extra-vars:
# theme_dir: /edx/app/edxapp/themes
# theme_repo: https://github.com/raccoongang/themes_for_themex.io.git
# theme_branch: racoongang-theme
# json_path: '/edx/app/edxapp'
#------------------------------
- name: Check if devstack exist
  stat: path="/vagrant"
  register: devstack

- name: Check if devstack
  fail: msg="Playbook not applicable for devstack"
  when: devstack.stat.exists

- name: Get time
  local_action: shell date +%s
  register: current_back
  run_once: true

- name: Create themes root dir
  file: path="{{ theme_dir }}" state=directory
  become_method: sudo
  become: yes
  become_user: edxapp

- name: Check if themes root dir exist
  stat: path={{ theme_dir }}
  register: check_theme_root_exist

- name: Clone git theme repo
  shell: cd {{ theme_dir }}/ && rm -rf {{ theme_dir }}/{{ theme_branch }} && git clone {{ theme_repo }} -b {{ theme_branch }} {{ theme_dir }}/{{ theme_branch }}
  when: check_theme_root_exist.stat.exists
  become_method: sudo
  become: yes
  become_user: edxapp

- name: Check if "{{server_vars_path}}" exist
  stat: path="{{server_vars_path}}"
  register: server_vars

- name: Check edx-platform vars file
  fail: msg="{{server_vars_path}} does not exists"
  when: not server_vars.stat.exists

- name: Check if "{{server_vars_path}}" exist
  command: cp "{{server_vars_path}}" "{{server_vars_path}}_{{ current_back.stdout }}"
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

- name: Ensure that server-vars contain EDXAPP_COMPREHENSIVE_THEME_DIR             
  lineinfile: dest="{{server_vars_path}}"
              regexp='^EDXAPP_COMPREHENSIVE_THEME_DIR:'
              insertafter=EOF
              line='EDXAPP_COMPREHENSIVE_THEME_DIR{{':'}} "{{ theme_dir }}/{{ theme_branch }}"'
              state=present
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

- name: Ensure that server-vars contain EDXAPP_COMPREHENSIVE_THEME_DIRS              
  lineinfile: dest="{{server_vars_path}}"
              regexp='^EDXAPP_COMPREHENSIVE_THEME_DIRS:'
              insertafter=EOF
              line="EDXAPP_COMPREHENSIVE_THEME_DIRS{{':'}}  [{{theme_dir}}]"
              state=present
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

- name: Ensure that server-vars contain EDXAPP_DEFAULT_SITE_THEME
  lineinfile: dest="{{server_vars_path}}"
              regexp='^EDXAPP_DEFAULT_SITE_THEME:'
              insertafter=EOF
              line='EDXAPP_DEFAULT_SITE_THEME{{':'}} "{{ SITE_THEME }}"'
              state=present
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

- name: Ensure that server-vars contain EDXAPP_ENABLE_COMPREHENSIVE_THEMING             
  lineinfile: dest="{{server_vars_path}}"
              regexp='^EDXAPP_ENABLE_COMPREHENSIVE_THEMING:'
              insertafter=EOF
              line='EDXAPP_ENABLE_COMPREHENSIVE_THEMING{{':'}} true'
              state=present
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

#- name: Ensure that server-vars contain EDXAPP_FEATURES
#  lineinfile: dest="{{server_vars_path}}"
#              regexp='^EDXAPP_FEATURES:'
#              insertafter=EOF
#              line='EDXAPP_FEATURES{{':'}}'
#              state=present
#  become_method: sudo
#  become: yes
#  become_user: root
#  when: check_theme_root_exist.stat.exists and server_vars.stat.exists
 
#- name: Ensure that USE_CUSTOM_THEME false in EDXAPP_FEATURES block
#  blockinfile:
#    dest: "{{server_vars_path}}"
#    marker: "#{mark} USE_CUSTOM_THEME"
#    insertafter: "^EDXAPP_FEATURES:"
#    block: |
#       {{' '}}USE_CUSTOM_THEME: false
#  become_method: sudo
#  become: yes
#  become_user: root
#  when: check_theme_root_exist.stat.exists and server_vars.stat.exists


- name: get current edx-platform git branch
  shell: cd /edx/app/edxapp/edx-platform/ && git branch | grep \* | sed "s/(\|)//g" | sed "s/*//g" | awk '{print $NF }'
  register: git_branch_output
  become_method: sudo
  become: yes
  become_user: edxapp

- name: run /edx/bin/update
  shell: "/edx/bin/update edx-platform {{ git_branch_output.stdout }} > /tmp/theme-update-edx.log"
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

- name: gather "{{item}}" static assets with paver
  script: "edxapp-update-assets-{{item}}"
  with_items:
    - cms
    - lms
  become_method: sudo
  become: yes
  become_user: root
  when: check_theme_root_exist.stat.exists and server_vars.stat.exists

